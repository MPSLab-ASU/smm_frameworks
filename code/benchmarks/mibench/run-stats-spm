#! /usr/bin/env python
import os
import subprocess
import openpyxl 

r = 0

def getStatsHelper(ws, progName, subpath):
#    	print r
    	CMType = os.path.basename(subpath)
	c = 1
	ws.cell(row = r, column = c).value = progName
    	c = c+1


	print subpath
	output = subprocess.Popen("grep sim_insts "+ subpath +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
    	if len(tempList) == 0:
    		return
	numInsts = float(tempList[1])
#	print numInsts
	ws.cell(row = r, column = c).value = numInsts
    	c = c+1

	if CMType == "smm":
		ws.cell(row = r, column = c).value = numInsts*TPI
		return

	output = subprocess.Popen("grep num_dmacalls "+ subpath +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numDMA = float(tempList[1])
#	print numDMA
	ws.cell(row = r, column = c).value = numDMA
    	c = c+1

	output = subprocess.Popen("grep bytes_transferred_dma "+ subpath +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	DMASize = float(tempList[1])
#	print DMASize
	ws.cell(row = r, column = c).value = DMASize
    	c = c+1

	ws.cell(row = r, column = c).value = numInsts*TPI + numDMA*startupCost + DMASize*transferTimePerByte
	c = c + 1

	output = subprocess.Popen("grep num_func_calls_cget "+ subpath + "/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numCalls_cget = float(tempList[1])
	ws.cell(row = r, column = c).value = numCalls_cget
    	c = c+1

	output = subprocess.Popen("grep num_insts_cget "+ subpath +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numInsts_cget = float(tempList[1])
	ws.cell(row = r, column = c).value = numInsts_cget
    	c = c+1

	output = subprocess.Popen("grep num_func_calls_ccall "+ subpath + "/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numCalls_ccall = float(tempList[1])
	ws.cell(row = r, column = c).value = numCalls_ccall
    	c = c+1

	output = subprocess.Popen("grep num_insts_ccall "+ subpath +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numInsts_ccall = float(tempList[1])
	ws.cell(row = r, column = c).value = numInsts_ccall
    	c = c+1





def getStats(directories):

	wb = openpyxl.Workbook()
	ws1 = wb.active
	ws1.title = "smm"
	ws2 = wb.create_sheet("smmcm")
	ws3 = wb.create_sheet("smmecm")

	ws1['A1'] = "benchmarks"
#	ws1['B1'] = "SPM Size"
#	ws1['C1'] = "Number of Instructions"
#	ws1['D1'] = "Execution Time"

	ws1['B1'] = "# insts"
	ws1['C1'] = "execution time"

	ws2['A1'] = "benchmarks"
	ws2['B1'] = "# insts"
	ws2['C1'] = "# DMA"
	ws2['D1'] = "DMA size"
	ws2['E1'] = "exec time"
	ws2['F1'] = "# calls of c_get"
	ws2['G1'] = "# insts of c_get"
	ws2['H1'] = "# calls of c_call*"
	ws2['I1'] = "# insts of c_call*"

	ws3['A1'] = "benchmarks"
	ws3['B1'] = "# insts"
	ws3['C1'] = "# DMA"
	ws3['D1'] = "DMA size"
	ws3['E1'] = "exec time"
	ws3['F1'] = "# calls of c_get"
	ws3['G1'] = "# insts of c_get"
	ws3['H1'] = "# calls of c_call*"
	ws3['I1'] = "# insts of c_call*"


	

	root = os.getcwd()

	global r
	r = 2
	for directory, numRegions in directories.iteritems():
		os.chdir(directory)
		print directory
		numRegionsStr = str(numRegions)
		getStatsHelper(ws1, directory, "m5out/spm/" + numRegionsStr + "/smm");
		getStatsHelper(ws2, directory, "m5out/spm/" + numRegionsStr + "/smmcm");
		getStatsHelper(ws3, directory, "m5out/spm/" + numRegionsStr + "/smmecm");

		r = r+1
		os.chdir(root)
	filename = "experiment.xlsx"
	wb.save(filename)



TPI = 0.9375 # 3 cycles
startupCost = 91
transferTimePerByte = 0.075

directories = {
    "adpcm.decode":2, 
    "adpcm.encode":2,
    "basicmath":2,
    "dijkstra":2,
    "FFT":2,
    "IFFT":2,
    "rijndael.decode":2,
    "rijndael.encode":2,
    "sha":2,
    "stringsearch":2, 
}


getStats(directories)


