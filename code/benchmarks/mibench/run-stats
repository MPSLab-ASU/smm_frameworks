#! /usr/bin/env python
import os
import subprocess
import openpyxl 

r = 0

def getStatsHelper(ws, progName, expType, CMType):
    	print r
	c = 1
	ws.cell(row = r, column = c).value = progName
    	c = c+1

	output = subprocess.Popen("grep sim_insts m5out/"+expType+"/"+CMType+"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
    	if len(tempList) == 0:
    		return
	numInsts = float(tempList[1])
#	print numInsts
	ws.cell(row = r, column = c).value = numInsts
    	c = c+1

	if CMType == "smm":
		ws.cell(row = r, column = c).value = numInsts*TPI
		return

	output = subprocess.Popen("grep system.cpu.workload.num_dmacalls m5out/"+expType+"/"+CMType+"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numDMA = float(tempList[1])
#	print numDMA
	ws.cell(row = r, column = c).value = numDMA
    	c = c+1

	output = subprocess.Popen("grep system.cpu.workload.bytes_transferred_dma m5out/"+expType+"/"+CMType+"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	DMASize = float(tempList[1])
#	print DMASize
	ws.cell(row = r, column = c).value = DMASize
    	c = c+1

	ws.cell(row = r, column = c).value = numInsts*TPI + numDMA*startupCost + DMASize*transferTimePerByte


def getStats(expType):

	wb = openpyxl.Workbook()
	ws1 = wb.active
	ws1.title = "smm"
	ws2 = wb.create_sheet("smmcm")
	ws3 = wb.create_sheet("smmecm")

	ws1['A1'] = "Benchmarks"
	ws1['B1'] = "SPM Size"
	ws1['C1'] = "Number of Instructions"
	ws1['D1'] = "Execution Time"

	ws2['A1'] = "Benchmarks"
	ws2['B1'] = "Number of DMA"
	ws2['C1'] = "DMA Size"
	ws2['D1'] = "Number of Instructions"
	ws2['E1'] = "Execution Time"

	ws3['A1'] = "Benchmarks"
	ws3['B1'] = "Number of DMA"
	ws3['C1'] = "DMA Size"
	ws3['D1'] = "Number of Instructions"
	ws3['E1'] = "Execution Time"


	root = os.getcwd()
	directories = []
	for path in os.listdir(root):
		if os.path.isdir(path):
			directories.append(path)
#	directories = ['stringsearch','test2']
#	directories.remove('patricia')
	print directories


	global r
	r = 2
	for directory in directories:
		os.chdir(directory)
#		print directory
		getStatsHelper(ws1, directory, expType, "smm");
		getStatsHelper(ws2, directory, expType, "smmcm");
		getStatsHelper(ws3, directory, expType, "smmecm");

		r = r+1
		os.chdir(root)
    	
	wb.save("experiment-" + expType +".xlsx")


TPI = 0.9375 # 3 cycles
startupCost = 91
transferTimePerByte = 0.075
getStats("min")
getStats("mid")
getStats("max")


