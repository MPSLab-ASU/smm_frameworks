#! /usr/bin/env python
import os
import subprocess
import openpyxl 

def getCachePerformance(path):
#	print path
	output = subprocess.Popen("grep sim_insts "+ path +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
    	if len(tempList) == 0:
    		return
	numInsts = float(tempList[1])

	output = subprocess.Popen("grep icache.overall_misses::total "+ path +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	missCnt = float(tempList[1])
	print missCnt

	return numInsts*TPI + missCnt*missPenalty


def getSPMPerformance(path):
#	print path
	output = subprocess.Popen("grep sim_insts "+ path +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
    	if len(tempList) == 0:
    		return
	numInsts = float(tempList[1])

	output = subprocess.Popen("grep num_dmacalls "+ path +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	numDMA = float(tempList[1])
#	print numDMA

	output = subprocess.Popen("grep bytes_transferred_dma "+ path +"/stats.txt", stdout=subprocess.PIPE, shell=True).communicate()[0]
	tempList = output.split()
	DMASize = float(tempList[1])

#	return numInsts*TPI + numDMA*startupCost + DMASize*transferTimePerByte
	return numInsts



TPI = 0.9375 # 3 cycles
startupCost = 91
transferTimePerByte = 0.075
missPenalty = 91

progInput = [
	("adpcm.decode",["2"]), 
	("adpcm.encode",["2"]),
	("basicmath",["2","2"]),
	("dijkstra",["2","2","2","2","2"]),
	("FFT",["2","2","2","2","2"]),
	("IFFT",["2","2","2","2","2"]),
	("rijndael.decode",["2","2","2"]),
	("rijndael.encode",["2","2","2","2"]),
	("sha",["2","2","3","3","3","3","3"]),
	("stringsearch",["2","2"])
]

cwd = os.getcwd()

wb = openpyxl.Workbook()
ws = wb.active
ws.title = "cache"
ws['A1'] = "benchmark name"
ws['B1'] = "1"
#ws1['A2'] = prog
r = 2
for prog, nums in progInput:
	print prog
	os.chdir(prog)

    	ws['A'+str(r)] = prog
    	ws['B'+str(r)] = 1

	for i in range(len(nums)):
	    	idx = str(i+2)
	    	col = chr(ord('A')+i+2)
		ws[col+"1"] = idx
#		print col
		metric1 = getCachePerformance("m5out/cache/" + nums[i]);
		metric2 = getSPMPerformance("m5out/spm/" + idx + "/smmecm");
		ws[col+str(r)] = float(metric2)/float(metric1)
	r = r+1
    	os.chdir(cwd)

filename = "experiment-cahe.xlsx"
wb.save(filename)

