#! /usr/bin/env python
import getopt
import os
import subprocess
import sys


config = "spm"
try:
	opts, args = getopt.getopt(sys.argv[1:], "-h", ["cache", "spm", "cm", "ecm", "sm", "ssm", "esm"]) 
except getopt.GetoptError as err:
	print str(err)
	sys.exit(2)
for opt, arg in opts:
	print opt
	if opt in ("--cache"):
		config = "cache"
	elif opt in ("--spm"):
		config = "spm"
	elif opt in ("--cm"):
		config = "cm"
	elif opt in ("--ecm"):
		config = "ecm"
	elif opt in ("--sm"):
		config = "sm"
	elif opt in ("--ssm"):
		config = "ssm"
	elif opt in ("--esm"):
		config = "esm"
cwd = os.getcwd()
work_dir = os.path.dirname(cwd)  + "/experiments/mibench"
os.chdir(work_dir)

directories = []
for path in os.listdir(work_dir):
	if os.path.isdir(path):
		directories.append(path)
#directories = [ 'stringsearch']
#directories.remove('script')
#print directories


for directory in sorted(directories):
	os.chdir(directory)
   	print directory
    	if config == "cache":
		command = "./configure-cache; make clean; make; ./runme;"
	if config == "mem":
		command = "./configure-spm; make clean; make; ./runme;"
	if config == "spm":
		command = "./configure-spm; make clean; make eim; ./runme_im;"
	elif config == "cm":
		command = "./configure-spm; make clean; make cm; ./runme_cm;"
	elif config == "ecm":
		command = "./configure-spm; make clean; make cm; make ecm; ./runme; ./runme_cm; ./runme_ecm;"
	elif config == "sm":
		command = "./configure-spm; make clean; make sm; ./runme_sm;"
	elif config == "ssm":
		command = "./configure-spm; make clean; make ssm; ./runme_ssm;"
	elif config == "esm":
		command = "./configure-spm; make clean; make esm; ./runme_esm;"
	subprocess.call(command, shell=True)
	os.chdir(work_dir)
os.chdir (cwd)
